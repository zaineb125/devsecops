name: Node.js CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-test:
    name: Build and test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x]
    steps:
    - uses: actions/checkout@v2
    - name: Setup Node.js
      uses: actions/setup-node@v2
      with:
        node-version: 14
    - name: Install server dependencies
      working-directory: api
      run: npm install
    - name: Install client dependencies
      working-directory: client
      run: npm install
    - name: Build the client
      working-directory: client
      run: npm run build
    - name: Run server tests
      working-directory: api
      run: npm test
    - name: Run client tests
      working-directory: client
      run: npm test

  docker-build-and-push:
    name: Docker Build and Push
    runs-on: ubuntu-latest
    needs: build-test
    steps:
    - uses: actions/checkout@v2
    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_PASSWORD }}
    - name: Build Docker images
      run: docker-compose build
    - name: Tag Docker images
      run: |
        docker tag mern-ui malekghorbel/mern-ui:latest
        docker tag mern-api malekghorbel/mern-api:latest
    - name: Push Docker images
      run: |
        docker push malekghorbel/mern-ui:latest
        docker push malekghorbel/mern-api:latest

  sonarcloud:
    name: SonarCloud
    runs-on: ubuntu-latest
    needs: build-test
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: 2e228496d7a0edf603ead1c42ef45bbd625abd3b
          SONAR_PROJECT_KEY: devops125_devops125
          SONAR_ORGANIZATION: devops125

  deploy-to-azure:
    name: Deploy to Azure with Terraform
    runs-on: ubuntu-latest
    needs: [docker-build-and-push]  # Runs after build and test jobs
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
  
    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v1
  
    - name: Terraform Initialize
      run: terraform init
  
    - name: Terraform Plan
      run: terraform plan
  
    - name: Terraform Apply
      run: terraform apply -auto-approve
      env:
        ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
        ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
        ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
          

  # Add deployment job here if needed
